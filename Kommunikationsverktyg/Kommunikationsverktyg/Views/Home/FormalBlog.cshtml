@model Kommunikationsverktyg.Models.ViewModels.ListFormalBlogViewModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Formell blogg";
}
<head>
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
</head>
<h2 id="formalblogH2">Formell Blogg</h2>
@using (Html.BeginForm("FormalBlog", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "formet" }))
{
    <div class="form-horizontal col-lg-12">
        <h4 id="formalblogH4">Gör ett inlägg</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group col-lg-12">
            @Html.TextBoxFor(m => m.Title, string.Empty, new { @class = "form-control", @placeholder = "Titel", @style = "width: 100% !important", @value = "" })
        </div>
        <div class="form-group col-lg-12">
            @Html.DropDownListFor(m => m.CategoryModelId, Model.CategoryList, "Välj Kategori", new { @class = "form-control" })
        </div>
        <div class="form-group col-lg-12">
            @Html.TextAreaFor(m => m.Message, 5, 10, new { @class = "form-control", @placeholder = "Meddelande", @value = "" })
        </div>
        <div class="col-lg-6" style="padding: 0 !important;">
            <label class="btn btn-block btn-success" id="file-upload">
                Lägg till fil
                <input type="file" name="File" id="File" class="btn btn-group-sm" hidden style="display: none !important;">
            </label>
        </div>
        <div class="col-lg-6">
            <button id="send-message" class="btn btn-block btn-primary" style=" margin-left: 0.1%;">Skicka</button>
        </div>
        <small id="file-path"></small>

    </div>

}

<div class="container">
    <div class="row">
        <!-- Blog Entries Column -->
        <div class="col-md-8">
            <h1 class="page-header">
                Formell Blogg
                <small>Se alla poster</small>
            </h1>
            <div class="container">
                <div class="form-inline" style="margin-bottom: 2%; margin-top: 2%;">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.CategoryModelId, Model.CategoryList, "Filtrera efter en kategori", new { @class = "form-control", id = "filter-category" })
                    </div>
                </div>
            </div>
            <hr />
            <div class="filtered-result">
                @for (int i = 0; i < Model.Posts.Count(); i++)
                {
                <div class="post remove-post" style="border: 1px solid #000; padding: 1%; margin: 1%;">
                    <h3 class="title">
                        @Model.Posts[i].Title
                        @Html.HiddenFor(m => m.Posts[i].Title)
                    </h3>
                    <small class="text-info" style="border: 1px solid #808080">Kategori: @Model.Posts[i].Category </small>@if (!Model.Posts[i].Followers.Any(f => f.Id == User.Identity.GetUserId()))
                    {<button class="badge badge-primary add-follower" id="@Model.Posts[i].CategoryId" style="background-color: #3bc212;">Följ Kategori</button> }
                    else
                    { <button class="badge badge-primary remove-follower" id="@Model.Posts[i].CategoryId" style="background-color: #ff0000;">Avfölj Kategori</button>}
                    <p class="lead">
                        av: <a href="~/Account/ViewExternProfile/@Model.Posts[i].UserId">@Model.Posts[i].Fullname</a>
                        @Html.HiddenFor(m => m.Posts[i].Fullname)
                    </p>
                    <p>
                        <span class="timestamp glyphicon glyphicon-time"></span> Skapad @Model.Posts[i].Timestamp.ToString()
                        @Html.HiddenFor(m => m.Posts[i].Timestamp)
                    </p>
                    <p>
                        <a tabindex="0" class="btn btn-default likes-popover" role="button" data-toggle="popover" data-trigger="focus" title="Gillas av" data-content="<ul class='hidden-likes list-group'>@foreach (var list in Model.Posts[i].Likers)
                            {
                                <li class='list-group-item'><a href='~/Account/ViewExternProfile/@list.User.Id'>@list.User.UserName</a></li>
                            }</ul>"><span id="likes">@Model.Posts[i].Likes</span> gillar detta</a>

                        </p>

                        <hr>
                        <p class="message">
                            @Model.Posts[i].Message
                            @Html.HiddenFor(m => m.Posts[i].Message)
                        </p>
                        <p>
                            @if (Model.Posts[i].FilePath != null)
                            {
                                <hr />
                                <a class="btn btn-default" href="../@Model.Posts[i].FilePath" download id="DownloadLink">Ladda ner mig</a>
                                <small>@Model.Posts[i].FilePath</small>
                            }
                        </p>
                        <hr>

                        @{


                            var IsUser = Model.Posts[i].Likers.Any(x => x.Id == User.Identity.GetUserId());
                            if (IsUser)
                            {
                                <button data-post-id=@Model.Posts[i].PostId  type="submit" class="dislike-btn btn btn-danger glyphicon glyphicon-thumbs-down" id="@Model.Posts[i].PostId">Dislike</button>
                            }
                            else
                            {
                                <button data-post-id=@Model.Posts[i].PostId type="submit" class="likeButton btn btn-info glyphicon glyphicon-thumbs-up" id="@Model.Posts[i].PostId"> Like</button>
                            }

                        }

                        <button class="commentBtn btn btn-default" id="@Model.Posts[i].PostId" value="Comment">Kommentera</button>
                        <input type="text" value="true" style="display: none !important;" />



                        @if (User.IsInRole("admin") || Model.Posts[i].UserId == User.Identity.GetUserId())
                        {
                            <button class="deleteButton btn btn-danger" id="@Model.Posts[i].PostId" value="Delete">Ta bort</button>
                            <input type="text" value="true" id="check-admin" style="display: none !important;" />
                        }
                        <h5>Kommentarer</h5>
                        @if (Model.Posts[i].Comments != null)
                        {
                            foreach (var comment in Model.Posts[i].Comments)
                            {
                                <div class="container">
                                    <div class="col-md-5" style="border: 1px solid black; border-radius: 3px; margin-bottom: 5px;">
                                        <a href="~/Account/ViewExternProfile/@comment.User.Id">@comment.User.Firstname @comment.User.Lastname</a>
                                        <p>@comment.Message</p>
                                        <p>@comment.Timestamp.ToString()</p>
                                    </div>

                                </div>

                            }
                        }
                    </div>
                   

                }

            </div>
        </div>
    </div>
</div>
<div id="CommentModal" class="modal fade" role="dialog" style="width: 600px; height: 500px; background-color: white; margin: auto; border-radius: 25px; padding: 10px; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Kommentera inlägget</h4>
    </div>
    <div class="modal-body">
        <h3>Kommentar</h3>
        <textarea id="commentText" rows="5" class="form-control" placeholder="Skriv din kommentar..." style="margin-bottom: 5%;">

        </textarea>
        <button class="btn btn-success" id="sendComment">Skicka kommentar</button>
        <p class="hidden" id="postId"></p>
    </div>
</div>
    @section Scripts{
        <script type="text/javascript">

        $(document).ready(function () {

         @*@foreach (var post in Model.Posts)
         {
             foreach (var user in post.Likers)
             {
                 if (user.Id == User.Identity.GetUserId())
                 {
                     <text>
                        var postId = $(".likeButton").getAttribute("data-post-id");

                        $(".likeButton").addClass("disabledButton");


                    </text>
                 }
             }

         }*@
            $(".add-follower").on("click", function (e) {
                var value = e.target.getAttribute("id");
                $.ajax({
                    url: "/api/category/follow/",
                    type: "Post",
                    data: value ,
                    contentType: "application/json; charset=utf-8",
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert("Något har gått fel, kontakta systemadmin!");
                    }

                })
            });
            $(".remove-follower").on("click", function (e) {
                var value = e.target.getAttribute("id");
                $.ajax({
                    url: "/api/category/unfollow/",
                    type: "Post",
                    data: value,
                    contentType: "application/json; charset=utf-8",
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert("Något har gått fel, kontakta systemadmin!");
                    }

                })
            });
            $(".disabledButton").prop("disabled", true);

            $('input[type="file"]').change(function (e) {
                var fileName = e.target.files[0].name;
                $("#file-path").empty();
                $("#file-path").append(fileName + '" har valts.');
            });
            $("#File").on("click", function () {
                $("#File").val("");
            });
    });

            $(".commentBtn").on("click", function (e) {
                var value = e.target.getAttribute("id");
                $("#CommentModal").modal();
                $("#postId").text(value);
            });

            $("#sendComment").on("click", function (e) {
                var value = $("#postId").text();
                var content = $("#commentText").val();
                var userId = "@User.Identity.GetUserId()";
                $.ajax({
                    url: "/api/blog/comment",
                    type: "Post",
                    data: JSON.stringify([value, userId, content]),
                    contentType: "application/json; charset=utf-8",
                    success: function () {
                        
                        location.reload();
                    },
                    error: function () {
                        alert("Något har gått fel, kontakta systemadmin!");
                    }

                })

            });

        $(".deleteButton").on("click", function (e) {
            var value = e.target.getAttribute("id");
            $.ajax({
                url: "/api/blog/delete",
                type: "Post",
                data: JSON.stringify([value]),
                contentType: "application/json; charset=utf-8",
                success: function () {
                    alert("Inlägget har raderats");
                    location.reload();
                },
                error: function () {
                    alert("Något har gått fel, kontakta systemadmin!");
                }

            })

        });

        var IsAdmin = false;

        $("#filter-category").change(function () {
            var value = $("#filter-category").val();
            if (value.length > 0) {
                var adminValue = $("#check-admin").val();
                if (adminValue != null) {
                    IsAdmin = true;
                }
                $(".remove-post").hide();
            } else {
                location.reload();
                return;
            };

            $.ajax({
                url: "/api/blog/filter",
                type: "Post",
                data: JSON.stringify([value]),
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        var HasImage = "";
                        if (data[i].FilePath != null) {
                            HasImage = "" +
                                "<a class='btn btn-default' href='../" + data[i].FilePath + "' download id='DownloadLink'>Ladda ner mig</a>" +
                                "<small>" + data[i].FilePath + "</small>"
                        }
                        var AdminBtn = "";
                        if (IsAdmin) {
                            AdminBtn = "<button class='deleteButton btn btn-danger' id='" + data[i].PostId + "' value='Delete'>Ta bort</button>";
                        }

                        $(".filtered-result").append(" <div class='post remove-post' style='border: 1px solid #000; padding: 1%; margin: 1%;'>" +
                            " <h3 class='title'>" + data[i].Title + "</h3 >" +
                            "<small class='text-info' style='border: 1px solid #808080'>Kategori: " + data[i].Category + "</small>" +
                            "<p class='lead'>" +
                            "av: <a href='../Account/ViewExternProfile/" + data[i].UserId + "'>" + data[i].Fullname + "</a>" +
                            "</p>" +
                            "<p>" +
                            "<span class='timestamp glyphicon glyphicon-time'></span> Skapad " + data[i].Timestamp.substring(0, 10) +
                            " </p>" + "<hr>" +
                            "<p class='message'>" + data[i].Message +
                            "</p>" +
                            "<p>" + HasImage + "</p><hr>" + AdminBtn + "</div>");
                    }
                    $(".deleteButton").on("click", function (e) {
                        var value = e.target.getAttribute("id");
                        $.ajax({
                            url: "/api/blog/delete",
                            type: "Post",
                            data: JSON.stringify([value]),
                            contentType: "application/json; charset=utf-8",
                            success: function () {
                                alert("Inlägget har raderats");
                                location.reload();
                            },
                            error: function () {
                                alert("Något har gått fel, kontakta systemadmin!");
                            }

                        })

                    });
                },
                error: function () {
                    alert("Inga inlägg har hittats.");
                }

            })
    });
    $(".likes-popover").on("click", function (e) {
        var target = $(e.target);
        target.popover({
            trigger: 'focus',
            html: true

        })
    })

         
         $(".likeButton").on("click", function (e) {
             var value = e.target.getAttribute("id");
             var target = $(e.target);
            //var currentUser = ;
            var likes = parseInt($('#likes').text(), 10) + 1;
            $.ajax({
                url: "/api/blog/like",
                type: "Post",
                data: JSON.stringify([value, "@User.Identity.GetUserName()"]),
                contentType: "application/json; charset=utf-8",
                success: function () {
                    
                    location.reload();

                },
                error: function () {
                    
                }

            })

            });
            $(document).ready(function(){

                $(".dislike-btn").on("click", function (e) {
                    var value = e.target.getAttribute("id");
                        
                         var target = $(e.target);
            $.ajax({
                url: "/api/blog/dislike/",
                type: "Post",
                data: value, 
                contentType: "application/json; charset=utf-8",
                success: function () {
                    location.reload();
                },
                error: function () {
                    location.reload();
                }

            })

        });
            })
        </script>
    }
